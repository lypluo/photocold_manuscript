legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###(a) for Prior GPP bias:
df_winterTmin_bias_prior<-left_join(plot_data_new_test,df_GPP)
#plotting
plot_winterT_GPPbia_prior<-ggplot()+
geom_point(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_prior,
aes(x=tmin_min,y=gpp_bias_rel,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
# legend.position = c(0.7,0.75),
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
plot_fT
#plotting
plot_winterT_GPPbia_prior<-ggplot()+
geom_point(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_prior,
aes(x=tmin_min,y=gpp_bias_rel,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("Prior GPP"[bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
# legend.position = c(0.7,0.75),
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###(b) for Post GPP bias:
df_winterTmin_bias_post<-left_join(plot_data_new_test,df_GPP_optim)
#plotting
plot_winterT_GPPbias_post<-ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("Post GPP"[bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = c(0.7,0.85),
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
# plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#using ggarrange from ggpubr package:
library(ggpubr)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 10,width = 9)
#plotting
plot_winterT_GPPbia_prior<-ggplot()+
geom_point(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_prior,
aes(x=tmin_min,y=gpp_bias_rel,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[prior-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
# legend.position = c(0.7,0.75),
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###(b) for Post GPP bias:
df_winterTmin_bias_post<-left_join(plot_data_new_test,df_GPP_optim)
#plotting
plot_winterT_GPPbias_post<-ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = c(0.7,0.85),
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
# plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#using ggarrange from ggpubr package:
library(ggpubr)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 10,width = 9)
#plotting
plot_winterT_GPPbia_prior<-ggplot()+
geom_point(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=df_winterTmin_bias_prior,aes(x=tmin_min,y=gpp_bias_rel),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_prior,
aes(x=tmin_min,y=gpp_bias_rel,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[prior-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = c(0.7,0.75),
# legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###(b) for Post GPP bias:
df_winterTmin_bias_post<-left_join(plot_data_new_test,df_GPP_optim)
#plotting
plot_winterT_GPPbias_post<-ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
# plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#using ggarrange from ggpubr package:
library(ggpubr)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 10,width = 9)
ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")
?stat_poly_eq
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 11,width = 9)
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 13,width = 9)
?stats
?stats::lm.fit
?stats::lm
?stats::lm.fit
ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),label.y = 0.8,
col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),label.y = 0.9,
col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
#plotting
plot_winterT_GPPbias_post<-ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),label.y = 0.9,
col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 11,width = 9)
#plotting
plot_winterT_GPPbias_post<-ggplot()+
geom_point(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT),size=4)+
geom_text_repel(data = df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
#update in Jan,2023
# geom_smooth(data=df_winterTmin_bias_post,aes(x=tmin_min,y=gpp_bias_rel_optim),col="white",se=FALSE,
#             method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=df_winterTmin_bias_post,
aes(x=tmin_min,y=gpp_bias_rel_optim,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),label.y = 0.85,
col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("GPP"[post-bias]*" (%)"))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.background = element_blank(),
legend.direction = "horizontal",
legend.text = element_text(size=16),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
# plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#using ggarrange from ggpubr package:
library(ggpubr)
# plot_fT<-ggarrange(plot_fT_spring,
#         plot_winterT_springfT,plot_winterT_GPPbias,align = "v",
#         nrow = 3,common.legend = TRUE,legend = "bottom")
#plot 1-->not use in Jan, 2023
# plot_fT<-plot_grid(plot_fT_spring,
#                    plot_winterT_springfT,plot_winterT_GPPbias,
#                    labels = c("a","b","c"),
#                    align = "v",
#                    nrow = 3,ncol=1)
#
plot_fT<-plot_grid(plot_winterT_springfT,
plot_winterT_GPPbia_prior,
plot_winterT_GPPbias_post,
labels = c("a","b","c"),
align = "v",
nrow = 3,ncol=1)
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_bias_new.png"),plot_fT,height = 11,width = 9)
