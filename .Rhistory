# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=1000))$par
}
par_PFTs_MF<-optim_par
par_PFTs_MF
unique(df_sel$sitename)
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="JP-SMF")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF")
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
par_PFTs_MF
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="JP-SMF")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa")
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="JP-SMF")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa")
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
View(df_merge_new)
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="JP-SMF")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa"|sitename=="BE-Vie")
View(df_merge_new)
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
df_merge_new<-df_merge_new %>% filter(sitename=="BE-Vie")
View(df_merge_new)
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   dplyr::summarise(gpp_obs=mean(gpp),
#                    gpp_mod=mean(gpp_mod))%>%
#   pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
# #
# df_t %>%
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
df_merge_new%>%
filter(sitename=="BE-Vie")%>%
ggplot()+
geom_point(aes(x=date,y=gpp),col="cyan2")+
geom_point(aes(x=date,y=gpp_mod),col="tomato")
# need to remove the sites that do not used in this analysis:
rm.sites<-c("BE-Bra","CA-SF1","CA-SF2","FI-Sod","US-Wi4")
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#test-->Nov,2022
df_t<-df_merge_new %>% filter(classid=="MF")%>%
group_by(sitename,doy)%>%
# dplyr::summarise(nobs=length(date))
dplyr::summarise(gpp_obs=mean(gpp),
gpp_mod=mean(gpp_mod))%>%
pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
#
df_t %>%
group_by(sitename)%>%
ggplot(aes(x=doy,y=gpp,col=gpp_source))+
geom_point()+
facet_grid(~sitename)
# need to remove the sites that do not used in this analysis:
rm.sites<-c("BE-Bra","CA-SF1","CA-SF2","FI-Sod","US-Wi4")
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   dplyr::summarise(gpp_obs=mean(gpp),
#                    gpp_mod=mean(gpp_mod))%>%
#   pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
# #
# df_t %>%
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
#cheking the time series indivudally(date base):
df_merge_new%>%
filter(sitename=="BE-Vie")%>%
ggplot()+
geom_point(aes(x=date,y=gpp),col="cyan2")+
geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa"|sitename=="BE-Vie")
df_merge_new<-df_merge_new %>% filter(sitename=="BE-Vie")
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   dplyr::summarise(gpp_obs=mean(gpp),
#                    gpp_mod=mean(gpp_mod))%>%
#   pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
# #
# df_t %>%
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
#cheking the time series indivudally(date base):
df_merge_new%>%
filter(sitename=="BE-Vie")%>%
ggplot()+
geom_point(aes(x=date,y=gpp),col="cyan2")+
geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
df_t<-df_merge_new %>% filter(classid=="MF")%>%
group_by(sitename,doy)%>%
# dplyr::summarise(nobs=length(date))
dplyr::summarise(gpp_obs=mean(gpp),
gpp_mod=mean(gpp_mod))%>%
pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
#
df_t %>%
group_by(sitename)%>%
ggplot(aes(x=doy,y=gpp,col=gpp_source))+
geom_point()+
facet_grid(~sitename)
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="BE-Vie")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa"|sitename=="US-Syv")
View(df_merge_new)
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
# need to remove the sites that do not used in this analysis:
rm.sites<-c("BE-Bra","CA-SF1","CA-SF2","FI-Sod","US-Wi4")
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="BE-Vie")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa"|sitename=="US-Syv"|sitename=="CH-Lae")
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
# need to remove the sites that do not used in this analysis:
rm.sites<-c("BE-Bra","CA-SF1","CA-SF2","FI-Sod","US-Wi4")
df_merge_new<-df_merge.new %>%
filter(sitename!=rm.sites[1] & sitename!=rm.sites[2]&sitename!=rm.sites[3]&sitename!=rm.sites[4]&sitename!=rm.sites[5])
#   group_by(sitename)%>%
#   ggplot(aes(x=doy,y=gpp,col=gpp_source))+
#   geom_point()+
#   facet_grid(~sitename)
# #cheking the time series indivudally(date base):
# df_merge_new%>%
#   filter(sitename=="BE-Vie")%>%
#   ggplot()+
#   geom_point(aes(x=date,y=gpp),col="cyan2")+
#   geom_point(aes(x=date,y=gpp_mod),col="tomato")
df_merge_new<-df_merge_new %>% filter(sitename=="JP-SMF"|sitename=="US-PFa"|sitename=="US-Syv"|sitename=="CH-Lae"|sitename=="BE-Vie")
#   par_PFTs[[i]]<-optim_par
# }
# print("finish parameterization")
# toc()
#
# names(par_PFTs)<-PFTs
# print(par_PFTs)
# # save the optimized data
# save(par_PFTs,file = paste0("data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
##adding some test for PFT:Nov,2022->as parameterized parameter for PFT does not work for running 5000 times
PFTs_sel<-"MF"
# set initial value
par <- c("tau"=5,"X0"=-10,"Smax"=5,"k"=1)
lower=c(1,-10,5,0)
upper=c(25,10,25,2)
# optimize for MF
library(tictoc)#-->record the parameterization time
tic("start to parameterize")
par_PFTs_MF<-c()
df_sel<-df_merge_new %>%
dplyr::filter(classid==PFTs_sel)
if(PFTs_sel=="MF"){
#update in Nov, 2022-->set more rounds for parameterization for MF as it have less data
optim_par <- GenSA::GenSA(
par = par,
fn = cost,
data = df_sel,
lower = lower,
upper = upper,
control = list(max.call=100))$par
}
par_PFTs_MF<-optim_par
print("finish parameterization")
toc()
par_PFTs_MF
#test-->Nov,2022
df_t<-df_merge_new %>% filter(classid=="MF")%>%
group_by(sitename,doy)%>%
# dplyr::summarise(nobs=length(date))
dplyr::summarise(gpp_obs=mean(gpp),
gpp_mod=mean(gpp_mod))%>%
pivot_longer(.,c(gpp_obs,gpp_mod),names_to="gpp_source",values_to="gpp")
#
df_t %>%
group_by(sitename)%>%
ggplot(aes(x=doy,y=gpp,col=gpp_source))+
geom_point()+
facet_grid(~sitename)
#cheking the time series indivudally(date base):
df_merge_new%>%
filter(sitename=="BE-Vie")%>%
ggplot()+
geom_point(aes(x=date,y=gpp),col="cyan2")+
geom_point(aes(x=date,y=gpp_mod),col="tomato")
#cheking the time series indivudally(date base):
df_merge_new%>%
filter(sitename=="BE-Vie")%>%
ggplot()+
geom_point(aes(x=date,y=gpp),col="cyan2")+
geom_point(aes(x=date,y=gpp_mod),col="tomato")
#
df_t %>%
group_by(sitename)%>%
ggplot(aes(x=doy,y=gpp,col=gpp_source))+
geom_point()+
facet_grid(~sitename)
