p_ppfd_midday_mean_tmin_DBF<-p_ppfd_midday_mean_tmin_DBF+
xlab("")+
ylab("")
# xlab(expression("PAR (umol m"^-2*"s"^-1*")"))
p_ppfd_midday_mean_tmin_MF<-p_ppfd_midday_mean_tmin_MF+
xlab(expression("PAR midday mean (umol m"^-2*"s"^-1*")"))+
ylab(expression("T"[min]*" (Â°C)"))
p_ppfd_midday_mean_tmin_ENF<-p_ppfd_midday_mean_tmin_ENF+
ylab("")+
xlab(expression("PAR midday mean (umol m"^-2*"s"^-1*")"))
#B. merge the plots and save:
save.path<-"./manuscript/figures/"
p_SW_IN_Tmin<-plot_grid(p_SW_midday_mean_tmin_all,p_SW_midday_mean_tmin_DBF,
p_SW_midday_mean_tmin_MF,p_SW_midday_mean_tmin_ENF,
nrow = 2,ncol=2,labels = "auto",label_size = 20,align = "hv")
ggsave(paste0(save.path,"Figure3_boxplot_SW_Tmin.png"),p_SW_IN_Tmin,width = 23,height = 19)
#
p_ppfd_Tmin<-plot_grid(p_ppfd_midday_mean_tmin_all,p_ppfd_midday_mean_tmin_DBF,
p_ppfd_midday_mean_tmin_MF,p_ppfd_midday_mean_tmin_ENF,
nrow = 2,ncol=2,labels = "auto",label_size = 20,align = "hv")
ggsave(paste0(save.path,"FigureS_boxplot_ppfd_Tmin.png"),p_ppfd_Tmin,width = 25,height = 19)
#test albedo
p_albedo1<-plot_grid(p_SW_midday_mean_alpha_SW_all,p_SW_midday_mean_alpha_SW_DBF,
p_SW_midday_mean_alpha_SW_MF,p_SW_midday_mean_alpha_SW_ENF,
nrow = 2,ncol=2)
p_albedo2<-plot_grid(p_ppfd_midday_alpha_PPFD_all,p_ppfd_midday_alpha_PPFD_DBF,
p_ppfd_midday_alpha_PPFD_MF,p_ppfd_midday_alpha_PPFD_ENF,
nrow = 2,ncol=2)
##---------------------------------------
#Aim: To compare the parameters among different groups(e.g.PFTs) after calibrating
#parameters for each site
##---------------------------------------
library(dplyr)
library(devtools)
# devtools::load_all("D:/Github/rbeni/")
# install_github("stineb/rbeni")
library(rbeni) #-->make the evaluation plot
devtools::load_all("D:/Github/rbeni/")
# install_github("stineb/rbeni")
library(rbeni) #-->make the evaluation plot
library(tidyverse)
library(cowplot)
library(grid)
library(ggpubr)
#---------------------------
#(1)load the calibrated parameters for each site
#---------------------------
load(paste0("./data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_eachsite.rds"))
#merge the parameters:
merge_pars<-c()
sites<-names(par_mutisites)
for(i in 1:length(par_mutisites)){
temp<-t(as.data.frame(par_mutisites[i]))
merge_pars<-rbind(merge_pars,temp)
}
pars_final<-as.data.frame(t(merge_pars))
names(pars_final)<-sites
#change the parameters name:
rownames(pars_final)<-c("tau","X0","Smax","k")
#----------------------------
#(2)load original data(meteos, gpp..)
#----------------------------
#load the data uploaded by Koen
df_recent <- readRDS(paste0("./data-raw/raw_data/P_model_output/model_data.rds")) %>%
mutate(
year = format(date, "%Y")
) %>%
na.omit()
#load the PFTs information:
#load the modis data-->tidy from Beni
#read_rds from tidyverse
load(paste0("./data-raw/raw_data/sites_info/","Pre_selected_sites_info.RDA"))
sites.info<-df_sites_sel
#----
#merge the data
#-----
df_merge<-left_join(df_recent,sites.info,by="sitename")
df_merge$year<-as.numeric(df_merge$year)
#load the data Beni sent me before:
df_old<-read.csv(file=paste0("./data-raw/raw_data/Data_sent_by_Beni/","ddf_fluxnet2015_pmodel_with_forcings_stocker19gmd.csv"))
df_old<-df_old %>%
mutate(date=lubridate::mdy(date),
year=lubridate::year(date)) %>%
na.omit(gpp_obs)
#----
#merge data:
#----
df_merge_new<-left_join(df_merge,df_old,by=c("sitename", "date", "year"))
#-----------
#summarize the meteos for each site
#-----------
df_sum_yearly_1<-df_merge_new %>%
group_by(sitename,year) %>%
dplyr::summarise(temp=mean(temp),
prec=sum(prec),
vpd=mean(vpd),
ppdf=mean(ppfd),
elv=mean(elv),
tmin=mean(tmin),
tmax=mean(tmax),
fapar_itpl=mean(fapar_itpl),
fapar_spl=mean(fapar_spl)
)
df_sum_yearly_2<-df_merge_new %>%
group_by(sitename,year) %>%
dplyr::summarise(lon=unique(lon),
lat=unique(lat),
classid=unique(classid),
koeppen_code=unique(koeppen_code))
df_sum_yearly<-left_join(df_sum_yearly_1,df_sum_yearly_2)
#---
#summary site-years for site
#---
df_sum_1<-df_sum_yearly %>%
group_by(sitename) %>%
summarise_at(vars(temp:fapar_spl),mean,na.rm=T)
df_sum_2<-df_sum_yearly %>%
group_by(sitename) %>%
dplyr::summarise(lon=unique(lon),
lat=unique(lat),
classid=unique(classid),
koeppen_code=unique(koeppen_code))
df_sum<-left_join(df_sum_1,df_sum_2)
names(df_sum)
##-----------------------
#(3) compare the parameter difference in differnt group
##----------------------
df_sum$Clim.PFTs<-paste0(df_sum$koeppen_code,"-",df_sum$classid)
#only target the sites we used for the analysis:
##---------------------
#A.load the event_length data-->the sites we were used
#---------------------
load.path<-"./data/event_length/"
load(paste0(load.path,"df_events_length.RDA"))
#
used_sites<-unique(df_events_all$sitename)
#-----select the data for thoses used sites----
#delete the sites do not used:
df_final<-df_sum %>%
filter(sitename %in% used_sites)
#--------------------------
#(4)plotting:
#--------------------------
#first merge the parameters with meteos:
pars_final<-as.data.frame(t(pars_final))
pars_final$sitename<-rownames(pars_final)
#merge:
df_final_new<-left_join(df_final,pars_final,by="sitename")
#---
#check the variables distribution and boxplots
#---
vars.names<-c("tau","X0","Smax","k")
for (i in 1:length(vars.names)) {
hist(as.numeric(unlist(df_final_new[,vars.names[i]])),xlab = vars.names[i])
}
##----------boxplot---------------------
#a. first for site-level parameters
data_sel_sites<-df_final_new %>%
dplyr::select(sitename,classid,tau:k)%>%
pivot_longer(c(tau:k),names_to = "parameter",values_to = "parameter_value")
#only focus on the tau,X0,Smax
data_sel_sites<-data_sel_sites %>%
filter(parameter %in% c("tau","X0","Smax"))%>%
mutate(PFT=classid,
classid=NULL)
data_sel_sites$flag=rep("site",nrow(data_sel_sites))
#
data_sel_sites$parameter<-factor(data_sel_sites$parameter,
levels = c("tau","X0","Smax"))
#-----------
#b.also load the parameters for diff PFTs:
load(paste0("./data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_PFTs.rds"))
paras_PFTs<-data.frame(DBF=par_PFTs$DBF,
MF=par_PFTs$MF,
EN=par_PFTs$ENF)
paras_PFTs<-as.data.frame(t(paras_PFTs))
paras_PFTs$PFT<-c("DBF","MF","ENF")
#also change the parameters names:
names(paras_PFTs)<-c("tau","X0","Smax","k","PFT")
#
data_sel_PFTs<-paras_PFTs %>%
dplyr::select(tau:Smax,PFT)%>%
pivot_longer(c(tau,X0,Smax),names_to = "parameter",values_to = "parameter_value")
data_sel_PFTs$flag=rep("PFT",nrow(data_sel_PFTs))
#
data_sel_PFTs$parameter<-factor(data_sel_PFTs$parameter,
levels = c("tau","X0","Smax"))
#c.load the parameters for diff Clim-PFTs:
load(paste0("./data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_Clim_andPFTs.rds"))
#
paras_Clim_PFTs<-c()
N<-length(names(par_Clim_PFTs))
for(i in 1:N){
temp<-t(as.data.frame(par_Clim_PFTs[i]))
paras_Clim_PFTs<-rbind(paras_Clim_PFTs,temp)
}
paras_Clim_PFTs<-as.data.frame(paras_Clim_PFTs)
names(paras_Clim_PFTs)<-c("tau","X0","Smax","k")
#
paras_Clim_PFTs$Clim_PFTs<-names(par_Clim_PFTs)
#
data_sel_Clim_PFTs<-paras_Clim_PFTs %>%
dplyr::select(tau:Smax,Clim_PFTs)%>%
pivot_longer(c(tau,X0,Smax),names_to = "parameter",values_to = "parameter_value")
data_sel_Clim_PFTs$flag=rep("Clim-PFT",nrow(data_sel_Clim_PFTs))
#########################
#merge site and PFTs data
data_sel_final<-bind_rows(data_sel_sites,data_sel_PFTs)
data_sel_final<-bind_rows(data_sel_final,data_sel_Clim_PFTs)
#box plot with gitter
data_sel_final$PFT<-factor(data_sel_final$PFT,levels = c("DBF","MF","ENF"))
data_sel_final$PFT<-factor(data_sel_final$PFT,levels = c("DBF","MF","ENF"))
data_sel_final$parameter<-factor(data_sel_final$parameter,levels = c("tau","X0","Smax"))
###plot part 1:
my_labeller<-as_labeller(c(tau="tau",X0="X[0]",Smax="S[max]"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau_(day)",X0="X[0]",Smax="S[max]"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau (day)",X0="X[0]",Smax="S[max]"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
?as_labeller
###plot part 1:
my_labeller<-as_labeller(c(tau="tau~(day)",X0="X[0]",Smax="S[max]"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau~(day)",X0="X[0]~(Â°C)",Smax="S[max]~(Â°C)"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau~(day)",X0="X[0]~(C)",Smax="S[max]~(C)"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau~(day)",X0="X[0]~(^[o]C)",Smax="S[max]~(^[o]C)"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
###plot part 1:
my_labeller<-as_labeller(c(tau="tau~(day)",X0="X[0]~('Â°C')",Smax="S[max]~('Â°C')"),default = label_parsed) #change the label of facet
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],
aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3,labeller = my_labeller)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
para_sites
para_sites
para_sites
head(data_sel_final)
para_sites
para_sites
##add the a,b,c indicate the panels:
dat_text<-data.frame(labels=c("a","b","c"),parameter=c("tau","X0","Smax"),
x=rep(0.1,3),y=c(25,3,25))
dat_text
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
##add the a,b,c indicate the panels:
dat_text<-data.frame(label=c("a","b","c"),parameter=c("tau","X0","Smax"),
x=rep(0.1,3),y=c(25,3,25))
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
para_sites
names(data_sel_final)
##add the a,b,c indicate the panels:
dat_text<-data.frame(label=c("a","b","c"),parameter=c("tau","X0","Smax"),
PFT=rep("DBF",3),
x=rep(0.1,3),y=c(25,3,25))
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
##add the a,b,c indicate the panels:
dat_text<-data.frame(label=c("a","b","c"),parameter=c("tau","X0","Smax"),
PFT=rep("DBF",3),
x=rep(1,3),y=c(25,3,25))
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
##add the a,b,c indicate the panels:
dat_text<-data.frame(label=c("a","b","c"),parameter=c("tau","X0","Smax"),
PFT=rep("DBF",3),
x=rep(0.5,3),y=c(25,3,25))
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
##add the a,b,c indicate the panels:
dat_text<-data.frame(label=c("a","b","c"),parameter=c("tau","X0","Smax"),
PFT=rep("DBF",3),
x=rep(0.5,3),y=c(25,3,25))
dat_text$parameter<-factor(dat_text$parameter,levels = c("tau","X0","Smax"))
para_sites+geom_text(
data=dat_text,
mapping = aes(x=x,y=y,label=label)
)
para_sites+geom_text(
data=dat_text,
size=2,
mapping = aes(x=x,y=y,label=label)
)
para_sites+geom_text(
data=dat_text,
size=6,
mapping = aes(x=x,y=y,label=label)
)
para_sites+geom_text(
data=dat_text,
size=6,col="black",
mapping = aes(x=x,y=y,label=label)
)
para_sites<-para_sites+geom_text(
data=dat_text,
size=6,col="black",
mapping = aes(x=x,y=y,label=label)
)
#change the color-blind friendly color==>refer the package colorspace
#refer:https://stackoverflow.com/questions/57153428/r-plot-color-combinations-that-are-colorblind-accessible
library(colorspace)
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta3"))
#---------------------------------------------
#:
tag_facet <- function(p, open = "", close = "", tag_pool = letters, x = -Inf, y = Inf,
hjust = "", vjust = "", fontface = 2, family = "", ...) {
# p<-para_sites
# x=paras_PFTs_new$x
# y=paras_PFTs_new$parameter_value
# open=""
# close=""
# tag_pool=paras_PFTs_new$label
gb <- ggplot_build(p)
lay <- gb$layout$layout
tags <- cbind(lay, label = paste0(open, tag_pool[lay$PANEL], close), x = x, y = y)
p + geom_text(data = tags, aes_string(x = "x", y = "y", label = "label"), ..., hjust = hjust,
vjust = vjust, fontface = fontface, family = family, inherit.aes = FALSE)
}
library(egg)
##add the PFTs parameters onto each panel:
paras_PFTs_new<-data_sel_final[data_sel_final$flag=="PFT",-1]
paras_PFTs_new$x<-rep(NA,nrow(paras_PFTs_new))
paras_PFTs_new[paras_PFTs_new$PFT=="MF",]$x<-1
paras_PFTs_new[paras_PFTs_new$PFT=="DBF",]$x<-0.75
paras_PFTs_new[paras_PFTs_new$PFT=="ENF",]$x<-1.25
##
paras_PFTs_new$label<-rep("*",nrow(paras_PFTs_new))
paras_PFTs_new$col<-c(rep("goldenrod",3),rep("cyan2",3),rep("magenta3",3))
#
# paras_PFTs_new$PFT<-factor(paras_PFTs_new$PFT,levels = c("DBF","MF","ENF"))
# paras_PFTs_new$parameter<-factor(paras_PFTs_new$parameter,levels = c("tau","X0","Smax"))
paras_boxplot<-tag_facet(para_sites,x=paras_PFTs_new$x,y=paras_PFTs_new$parameter_value,
#here I add 1 for y axis since there parameters for PFTs did not display properly
tag_pool = paras_PFTs_new$label,size=12,col=paras_PFTs_new$col)
paras_boxplot
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure5_parameters_boxplot.png"),paras_boxplot)
ggsave(paste0(save.path,"Figure5_parameters_boxplot.png"),paras_boxplot,height = 5,width = 8)
