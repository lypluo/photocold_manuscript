round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(do_legend==FALSE){
pars_final<-pars_final+
theme(legend.position = "none")
}
#
return(pars_final)
}
p_tmin_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "tau",TRUE)
p_tmin_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "Smax",FALSE)
#change the x labels:
p_tmin_tau<-p_tmin_tau+
# xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*""))+
xlab("")+ylab(expression(tau*""))
p_tmin_X0<-p_tmin_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))+
xlab("")+ylab(expression(X[0]*" (°C)"))
p_tmin_Smax<-p_tmin_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmin_tau,p_tmin_X0,p_tmin_Smax,nrow=3,
ncol = 1,labels = "auto",label_size = 20,align = "hv")
######save the plot###########
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure7_winter_to_geenup_parameters_ranges.png"),paras_range,height = 21,width =10)
###plot part 2:
#----------------scatter plot------------------
#environmental drivers vs parameters
library(ggforce)
library(ggrepel)
plot_paras<-function(df_meteo,df_paras,Env_var,para,do_legend){
# df_meteo<-df_final_new
# df_paras<-data_sel_final
# Env_var<-"tmin"
# para<-"X0"
# do_legend=FALSE
# for example: Tmean vs tau
#I.site-level
df_site_level<-df_meteo %>%
dplyr::select(sitename,classid,koeppen_code,Clim.PFTs,para,tmin,temp)
names(df_site_level)<-c("sitename","PFT","Clim.","Clim.PFTs","para","tmin","tmean")
#
t_pos<-match(Env_var,names(df_site_level))
df_site_level_new<-df_site_level
names(df_site_level_new)[t_pos]<-"Env_var"
#III.PFT level---
df_PFT_level<-df_site_level%>%
mutate(PFT=factor(PFT,levels = c("DBF","MF","ENF")))%>%
group_by(PFT)%>%
dplyr::summarise(tmin=mean(tmin,na.rm=T),
tmean=mean(tmean,na.rm=T))
par_PFT_level<-df_paras[df_paras$flag=="PFT",] %>%
mutate(sitename=NULL,Clim_PFTs=NULL,flag=NULL)%>%
filter(parameter==para)
par_PFT_level<-par_PFT_level[,-1]
names(par_PFT_level)<-c("para","PFT")
#
df_PFT_level_new<-left_join(df_PFT_level,par_PFT_level)
#
t_pos<-match(Env_var,names(df_PFT_level_new))
names(df_PFT_level_new)[t_pos]<-"Env_var"
##----plotting----##
library(ggpmisc)
# library(ggpubr)
#linear regression:
#----DBF------
lm_DBF<-lm(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
para~Env_var)
stat_lm_DBF<-summary(lm_DBF)
stat_DBF_label<-data.frame(r.squared=round(stat_lm_DBF$r.squared,2),
p.value=round(coef(stat_lm_DBF)[2,4],4))
#----Dfc-ENF-----
lm_Dfc_ENF<-lm(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
para~Env_var)
stat_lm_Dfc_ENF<-summary(lm_Dfc_ENF)
stat_Dfc_ENF_label<-data.frame(r.squared=round(stat_lm_Dfc_ENF$r.squared,2),
p.value=round(coef(stat_lm_Dfc_ENF)[2,4],4))
pars_final<-ggplot()+
geom_point(data=df_site_level_new,aes(x=Env_var,y=para,col=PFT),size=3)+
# scale_color_discrete_sequential(palette = "Viridis")+
geom_text_repel(data=df_site_level_new,aes(x=Env_var,y=para,label=sitename),size=5)+
stat_poly_line(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,col=PFT),
fill=adjustcolor("goldenrod1"),method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#                aes(x=Env_var,y=para,col=PFT,
#                    label = paste(
#                                  # after_stat(grp.label), "*\"：\"*",
#                                  # after_stat(eq.label), "*\", \"*",
#                                  after_stat(rr.label),
#                                  after_stat(p.value.label),
#                                  sep = "*\", \"*"),
#                    label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#     aes(x=Env_var,y=para,label=PFT,group=PFT,col=PFT),label.fill = "goldenrod1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "goldenrod1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##DBF
stat_poly_line(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
aes(x=Env_var,y=para,col=PFT),fill=adjustcolor("magenta1"),
method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
#                  aes(x=Env_var,y=para,col=PFT,
#                     label = paste(
#                       after_stat(rr.label),
#                       after_stat(p.value.label),
#                       sep = "*\", \"*"),
#                 label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$Clim.PFTs=="Dfc-ENF",],
#     aes(x=Env_var,y=para,label=Clim.PFTs,group=Clim.PFTs,col=PFT),label.fill = "magenta1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "magenta1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##Dfc-ENF
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
xlab(paste0(Env_var," (°C)"))+
ylab(paste0(para," (°C)"))+
xlim(-10,15)+
theme(
legend.text = element_text(size=22),
legend.position = c(0.15,0.8),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
if(para=="tau"){
pars_final<-pars_final+
annotate(geom = "text",x=9.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=9.1,y=22,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta",size=5)+
annotate(geom = "text",x=15,y=22,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta",size=5)
}
if(para=="X0"){
pars_final<-pars_final+
annotate(geom = "text",x=9.1,y=5,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=5,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=9.1,y=4,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=15,y=4,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(para=="Smax"){
pars_final<-pars_final+
annotate(geom = "text",x=9.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=9.1,y=22.5,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=15,y=22.5,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(do_legend==FALSE){
pars_final<-pars_final+
theme(legend.position = "none")
}
#
return(pars_final)
}
p_tmin_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "tau",TRUE)
p_tmin_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "Smax",FALSE)
#change the x labels:
p_tmin_tau<-p_tmin_tau+
# xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*""))+
xlab("")+ylab(expression(tau*""))
p_tmin_X0<-p_tmin_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))+
xlab("")+ylab(expression(X[0]*" (°C)"))
p_tmin_Smax<-p_tmin_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmin_tau,p_tmin_X0,p_tmin_Smax,nrow=3,
ncol = 1,labels = "auto",label_size = 20,align = "hv")
######save the plot###########
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure7_winter_to_geenup_parameters_ranges.png"),paras_range,height = 21,width =10)
plot_paras<-function(df_meteo,df_paras,Env_var,para,do_legend){
# df_meteo<-df_final_new
# df_paras<-data_sel_final
# Env_var<-"tmin"
# para<-"X0"
# do_legend=FALSE
# for example: Tmean vs tau
#I.site-level
df_site_level<-df_meteo %>%
dplyr::select(sitename,classid,koeppen_code,Clim.PFTs,para,tmin,temp)
names(df_site_level)<-c("sitename","PFT","Clim.","Clim.PFTs","para","tmin","tmean")
#
t_pos<-match(Env_var,names(df_site_level))
df_site_level_new<-df_site_level
names(df_site_level_new)[t_pos]<-"Env_var"
#III.PFT level---
df_PFT_level<-df_site_level%>%
mutate(PFT=factor(PFT,levels = c("DBF","MF","ENF")))%>%
group_by(PFT)%>%
dplyr::summarise(tmin=mean(tmin,na.rm=T),
tmean=mean(tmean,na.rm=T))
par_PFT_level<-df_paras[df_paras$flag=="PFT",] %>%
mutate(sitename=NULL,Clim_PFTs=NULL,flag=NULL)%>%
filter(parameter==para)
par_PFT_level<-par_PFT_level[,-1]
names(par_PFT_level)<-c("para","PFT")
#
df_PFT_level_new<-left_join(df_PFT_level,par_PFT_level)
#
t_pos<-match(Env_var,names(df_PFT_level_new))
names(df_PFT_level_new)[t_pos]<-"Env_var"
##----plotting----##
library(ggpmisc)
# library(ggpubr)
#linear regression:
#----DBF------
lm_DBF<-lm(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
para~Env_var)
stat_lm_DBF<-summary(lm_DBF)
stat_DBF_label<-data.frame(r.squared=round(stat_lm_DBF$r.squared,2),
p.value=round(coef(stat_lm_DBF)[2,4],4))
#----Dfc-ENF-----
lm_Dfc_ENF<-lm(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
para~Env_var)
stat_lm_Dfc_ENF<-summary(lm_Dfc_ENF)
stat_Dfc_ENF_label<-data.frame(r.squared=round(stat_lm_Dfc_ENF$r.squared,2),
p.value=round(coef(stat_lm_Dfc_ENF)[2,4],4))
pars_final<-ggplot()+
geom_point(data=df_site_level_new,aes(x=Env_var,y=para,col=PFT),size=3)+
# scale_color_discrete_sequential(palette = "Viridis")+
geom_text_repel(data=df_site_level_new,aes(x=Env_var,y=para,label=sitename),size=5)+
stat_poly_line(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,col=PFT),
fill=adjustcolor("goldenrod1"),method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#                aes(x=Env_var,y=para,col=PFT,
#                    label = paste(
#                                  # after_stat(grp.label), "*\"：\"*",
#                                  # after_stat(eq.label), "*\", \"*",
#                                  after_stat(rr.label),
#                                  after_stat(p.value.label),
#                                  sep = "*\", \"*"),
#                    label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#     aes(x=Env_var,y=para,label=PFT,group=PFT,col=PFT),label.fill = "goldenrod1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "goldenrod1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##DBF
stat_poly_line(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
aes(x=Env_var,y=para,col=PFT),fill=adjustcolor("magenta1"),
method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
#                  aes(x=Env_var,y=para,col=PFT,
#                     label = paste(
#                       after_stat(rr.label),
#                       after_stat(p.value.label),
#                       sep = "*\", \"*"),
#                 label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$Clim.PFTs=="Dfc-ENF",],
#     aes(x=Env_var,y=para,label=Clim.PFTs,group=Clim.PFTs,col=PFT),label.fill = "magenta1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "magenta1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##Dfc-ENF
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
xlab(paste0(Env_var," (°C)"))+
ylab(paste0(para," (°C)"))+
xlim(-10,15)+
theme(
legend.text = element_text(size=22),
legend.position = c(0.15,0.8),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
if(para=="tau"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=22,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta",size=5)+
annotate(geom = "text",x=15,y=22,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta",size=5)
}
if(para=="X0"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=5,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=5,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=4,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=15,y=4,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(para=="Smax"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=15,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=22.5,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=15,y=22.5,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(do_legend==FALSE){
pars_final<-pars_final+
theme(legend.position = "none")
}
#
return(pars_final)
}
p_tmin_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "tau",TRUE)
p_tmin_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "Smax",FALSE)
#change the x labels:
p_tmin_tau<-p_tmin_tau+
# xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*""))+
xlab("")+ylab(expression(tau*""))
p_tmin_X0<-p_tmin_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))+
xlab("")+ylab(expression(X[0]*" (°C)"))
p_tmin_Smax<-p_tmin_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmin_tau,p_tmin_X0,p_tmin_Smax,nrow=3,
ncol = 1,labels = "auto",label_size = 20,align = "hv")
######save the plot###########
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure7_winter_to_geenup_parameters_ranges.png"),paras_range,height = 21,width =10)
plot_paras<-function(df_meteo,df_paras,Env_var,para,do_legend){
# df_meteo<-df_final_new
# df_paras<-data_sel_final
# Env_var<-"tmin"
# para<-"X0"
# do_legend=FALSE
# for example: Tmean vs tau
#I.site-level
df_site_level<-df_meteo %>%
dplyr::select(sitename,classid,koeppen_code,Clim.PFTs,para,tmin,temp)
names(df_site_level)<-c("sitename","PFT","Clim.","Clim.PFTs","para","tmin","tmean")
#
t_pos<-match(Env_var,names(df_site_level))
df_site_level_new<-df_site_level
names(df_site_level_new)[t_pos]<-"Env_var"
#III.PFT level---
df_PFT_level<-df_site_level%>%
mutate(PFT=factor(PFT,levels = c("DBF","MF","ENF")))%>%
group_by(PFT)%>%
dplyr::summarise(tmin=mean(tmin,na.rm=T),
tmean=mean(tmean,na.rm=T))
par_PFT_level<-df_paras[df_paras$flag=="PFT",] %>%
mutate(sitename=NULL,Clim_PFTs=NULL,flag=NULL)%>%
filter(parameter==para)
par_PFT_level<-par_PFT_level[,-1]
names(par_PFT_level)<-c("para","PFT")
#
df_PFT_level_new<-left_join(df_PFT_level,par_PFT_level)
#
t_pos<-match(Env_var,names(df_PFT_level_new))
names(df_PFT_level_new)[t_pos]<-"Env_var"
##----plotting----##
library(ggpmisc)
# library(ggpubr)
#linear regression:
#----DBF------
lm_DBF<-lm(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
para~Env_var)
stat_lm_DBF<-summary(lm_DBF)
stat_DBF_label<-data.frame(r.squared=round(stat_lm_DBF$r.squared,2),
p.value=round(coef(stat_lm_DBF)[2,4],4))
#----Dfc-ENF-----
lm_Dfc_ENF<-lm(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
para~Env_var)
stat_lm_Dfc_ENF<-summary(lm_Dfc_ENF)
stat_Dfc_ENF_label<-data.frame(r.squared=round(stat_lm_Dfc_ENF$r.squared,2),
p.value=round(coef(stat_lm_Dfc_ENF)[2,4],4))
pars_final<-ggplot()+
geom_point(data=df_site_level_new,aes(x=Env_var,y=para,col=PFT),size=3)+
# scale_color_discrete_sequential(palette = "Viridis")+
geom_text_repel(data=df_site_level_new,aes(x=Env_var,y=para,label=sitename),size=5)+
stat_poly_line(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,col=PFT),
fill=adjustcolor("goldenrod1"),method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#                aes(x=Env_var,y=para,col=PFT,
#                    label = paste(
#                                  # after_stat(grp.label), "*\"：\"*",
#                                  # after_stat(eq.label), "*\", \"*",
#                                  after_stat(rr.label),
#                                  after_stat(p.value.label),
#                                  sep = "*\", \"*"),
#                    label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
#     aes(x=Env_var,y=para,label=PFT,group=PFT,col=PFT),label.fill = "goldenrod1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "goldenrod1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##DBF
stat_poly_line(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
aes(x=Env_var,y=para,col=PFT),fill=adjustcolor("magenta1"),
method = "lm",formula = y ~ x,lty=2)+
# stat_poly_eq(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
#                  aes(x=Env_var,y=para,col=PFT,
#                     label = paste(
#                       after_stat(rr.label),
#                       after_stat(p.value.label),
#                       sep = "*\", \"*"),
#                 label.x=0.5,label.y="bottom"))+
##update in Nov,2022-->remove the circle
# ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$Clim.PFTs=="Dfc-ENF",],
#     aes(x=Env_var,y=para,label=Clim.PFTs,group=Clim.PFTs,col=PFT),label.fill = "magenta1",
#     con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "magenta1",
#     con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##Dfc-ENF
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
xlab(paste0(Env_var," (°C)"))+
ylab(paste0(para," (°C)"))+
xlim(-10,15)+
theme(
legend.text = element_text(size=22),
legend.position = c(0.15,0.8),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
if(para=="tau"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=14,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=22,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta",size=5)+
annotate(geom = "text",x=14,y=22,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta",size=5)
}
if(para=="X0"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=5,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=14,y=5,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=4,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=14,y=4,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(para=="Smax"){
pars_final<-pars_final+
annotate(geom = "text",x=10.1,y=24,label = paste0("italic(R) ^ 2 == ",
stat_DBF_label$r.squared),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=14,y=24,label = paste0("italic(p) ==",
round(stat_DBF_label$p.value,2)),parse=TRUE,col="orange",size=5)+
annotate(geom = "text",x=10.1,y=22.5,label = paste0("italic(R) ^ 2 == ",
stat_Dfc_ENF_label$r.squared),parse=TRUE,col="magenta1",size=5)+
annotate(geom = "text",x=14,y=22.5,label = paste0("italic(p) == ",
round(stat_Dfc_ENF_label$p.value,2)),parse=TRUE,col="magenta1",size=5)
}
if(do_legend==FALSE){
pars_final<-pars_final+
theme(legend.position = "none")
}
#
return(pars_final)
}
p_tmin_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "tau",TRUE)
p_tmin_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "Smax",FALSE)
#change the x labels:
p_tmin_tau<-p_tmin_tau+
# xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*""))+
xlab("")+ylab(expression(tau*""))
p_tmin_X0<-p_tmin_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))+
xlab("")+ylab(expression(X[0]*" (°C)"))
p_tmin_Smax<-p_tmin_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmin_tau,p_tmin_X0,p_tmin_Smax,nrow=3,
ncol = 1,labels = "auto",label_size = 20,align = "hv")
######save the plot###########
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure7_winter_to_geenup_parameters_ranges.png"),paras_range,height = 21,width =10)
