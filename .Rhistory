select(tau:Smax,PFT)%>%
pivot_longer(c(tau,X0,Smax),names_to = "parameter",values_to = "parameter_value")
data_sel_PFTs$flag=rep("PFT",nrow(data_sel_PFTs))
#
data_sel_PFTs$parameter<-factor(data_sel_PFTs$parameter,
levels = c("tau","X0","Smax"))
#c.load the parameters for diff Clim-PFTs:
load(paste0("./data/model_parameters/parameters_MAE_newfT/","optim_par_run5000_Clim_andPFTs.rds"))
#
paras_Clim_PFTs<-c()
N<-length(names(par_Clim_PFTs))
for(i in 1:N){
temp<-t(as.data.frame(par_Clim_PFTs[i]))
paras_Clim_PFTs<-rbind(paras_Clim_PFTs,temp)
}
paras_Clim_PFTs<-as.data.frame(paras_Clim_PFTs)
names(paras_Clim_PFTs)<-c("tau","X0","Smax","k")
#
paras_Clim_PFTs$Clim_PFTs<-names(par_Clim_PFTs)
#
data_sel_Clim_PFTs<-paras_Clim_PFTs %>%
select(tau:Smax,Clim_PFTs)%>%
pivot_longer(c(tau,X0,Smax),names_to = "parameter",values_to = "parameter_value")
data_sel_Clim_PFTs$flag=rep("Clim-PFT",nrow(data_sel_Clim_PFTs))
#########################
#merge site and PFTs data
data_sel_final<-bind_rows(data_sel_sites,data_sel_PFTs)
data_sel_final<-bind_rows(data_sel_final,data_sel_Clim_PFTs)
#box plot with gitter
data_sel_final$PFT<-factor(data_sel_final$PFT,levels = c("DBF","MF","ENF"))
##parameters distributions of different sites
#
# devtools::install_github("zeehio/facetscales")
# library(facetscales)
# scales_y<-list(
#   "a"=scale_y_continuous(limits = c(-40,25)),
#   "b"=scale_y_continuous(limits = c(-5,25)),
#   "c"=scale_y_continuous(limits = c(-0,200)),
#   "d"=scale_y_continuous(limits = c(-5,20)),
#   "k"=scale_y_continuous(limits = c(-10,15))
# )
data_sel_final$PFT<-factor(data_sel_final$PFT,levels = c("DBF","MF","ENF"))
data_sel_final$parameter<-factor(data_sel_final$parameter,levels = c("tau","X0","Smax"))
###plot part 1:
para_sites<-ggplot(data=data_sel_final[data_sel_final$flag=="site",],aes(x=parameter,y=parameter_value,fill=PFT,col=PFT))+
geom_point(position = position_jitterdodge())+
geom_boxplot(alpha=0.6)+
xlab("")+
facet_wrap(~parameter,scales = "free",ncol = 3)+
xlab("Parameters")+
ylab("")+
theme_bw()+
# theme(legend.position = c(0.75,0.18),
theme(
legend.background = element_blank(),
legend.title = element_text(size=24),
legend.text = element_text(size=22),
axis.title = element_text(size=24),
axis.text.y = element_text(size=22),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(size = 22)) ##change the facet label size
#change the color-blind friendly color==>refer the package colorspace
#refer:https://stackoverflow.com/questions/57153428/r-plot-color-combinations-that-are-colorblind-accessible
library(colorspace)
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))
#---------------------------------------------
#:
tag_facet <- function(p, open = "", close = "", tag_pool = letters, x = -Inf, y = Inf,
hjust = "", vjust = "", fontface = 2, family = "", ...) {
# p<-para_sites
# x=paras_PFTs_new$x
# y=paras_PFTs_new$parameter_value
# open=""
# close=""
# tag_pool=paras_PFTs_new$label
gb <- ggplot_build(p)
lay <- gb$layout$layout
tags <- cbind(lay, label = paste0(open, tag_pool[lay$PANEL], close), x = x, y = y)
p + geom_text(data = tags, aes_string(x = "x", y = "y", label = "label"), ..., hjust = hjust,
vjust = vjust, fontface = fontface, family = family, inherit.aes = FALSE)
}
library(egg)
##add the PFTs parameters onto each panel:
paras_PFTs_new<-data_sel_final[data_sel_final$flag=="PFT",-1]
paras_PFTs_new$x<-rep(NA,nrow(paras_PFTs_new))
paras_PFTs_new[paras_PFTs_new$PFT=="MF",]$x<-1
paras_PFTs_new[paras_PFTs_new$PFT=="DBF",]$x<-0.75
paras_PFTs_new[paras_PFTs_new$PFT=="ENF",]$x<-1.25
##
paras_PFTs_new$label<-rep("*",nrow(paras_PFTs_new))
paras_PFTs_new$col<-c(rep("goldenrod",3),rep("cyan",3),rep("magenta",3))
#
# paras_PFTs_new$PFT<-factor(paras_PFTs_new$PFT,levels = c("DBF","MF","ENF"))
# paras_PFTs_new$parameter<-factor(paras_PFTs_new$parameter,levels = c("tau","X0","Smax"))
paras_boxplot<-tag_facet(para_sites,x=paras_PFTs_new$x,y=paras_PFTs_new$parameter_value,
#here I add 1 for y axis since there parameters for PFTs did not display properly
tag_pool = paras_PFTs_new$label,size=12,col=paras_PFTs_new$col)
paras_boxplot
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan1",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))
para_sites
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan3",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))
para_sites
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan2",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan2",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
#---------------------------------------------
#:
tag_facet <- function(p, open = "", close = "", tag_pool = letters, x = -Inf, y = Inf,
hjust = "", vjust = "", fontface = 2, family = "", ...) {
# p<-para_sites
# x=paras_PFTs_new$x
# y=paras_PFTs_new$parameter_value
# open=""
# close=""
# tag_pool=paras_PFTs_new$label
gb <- ggplot_build(p)
lay <- gb$layout$layout
tags <- cbind(lay, label = paste0(open, tag_pool[lay$PANEL], close), x = x, y = y)
p + geom_text(data = tags, aes_string(x = "x", y = "y", label = "label"), ..., hjust = hjust,
vjust = vjust, fontface = fontface, family = family, inherit.aes = FALSE)
}
library(egg)
##add the PFTs parameters onto each panel:
paras_PFTs_new<-data_sel_final[data_sel_final$flag=="PFT",-1]
paras_PFTs_new$x<-rep(NA,nrow(paras_PFTs_new))
paras_PFTs_new[paras_PFTs_new$PFT=="MF",]$x<-1
paras_PFTs_new[paras_PFTs_new$PFT=="DBF",]$x<-0.75
paras_PFTs_new[paras_PFTs_new$PFT=="ENF",]$x<-1.25
##
paras_PFTs_new$label<-rep("*",nrow(paras_PFTs_new))
paras_PFTs_new$col<-c(rep("goldenrod",3),rep("cyan",3),rep("magenta",3))
#
# paras_PFTs_new$PFT<-factor(paras_PFTs_new$PFT,levels = c("DBF","MF","ENF"))
# paras_PFTs_new$parameter<-factor(paras_PFTs_new$parameter,levels = c("tau","X0","Smax"))
paras_boxplot<-tag_facet(para_sites,x=paras_PFTs_new$x,y=paras_PFTs_new$parameter_value,
#here I add 1 for y axis since there parameters for PFTs did not display properly
tag_pool = paras_PFTs_new$label,size=12,col=paras_PFTs_new$col)
paras_boxplot
paras_PFTs_new$col<-c(rep("goldenrod",3),rep("cyan2",3),rep("magenta",3))
#
# paras_PFTs_new$PFT<-factor(paras_PFTs_new$PFT,levels = c("DBF","MF","ENF"))
# paras_PFTs_new$parameter<-factor(paras_PFTs_new$parameter,levels = c("tau","X0","Smax"))
paras_boxplot<-tag_facet(para_sites,x=paras_PFTs_new$x,y=paras_PFTs_new$parameter_value,
#here I add 1 for y axis since there parameters for PFTs did not display properly
tag_pool = paras_PFTs_new$label,size=12,col=paras_PFTs_new$col)
paras_boxplot
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta1",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
para_sites
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta2",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta2",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta4",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta2",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta"))
para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta3"))
# mycolors<-rev(sequential_hcl(7,palette = "Viridis")[c(1,3,5)])
para_sites<-para_sites+
# scale_fill_discrete_sequential(palette = "Viridis",alpha=0.5)+
# scale_color_discrete_sequential(palette = "Viridis",alpha = 0.5)
scale_fill_manual(values = c("DBF"=adjustcolor("orange",alpha.f =0.2),
"MF"=adjustcolor("cyan",alpha.f =0.2),"ENF"=adjustcolor("magenta",alpha.f =0.2)))+
scale_color_manual(values = c("DBF"="orange","MF"="cyan2","ENF"="magenta3"))
#---------------------------------------------
#:
tag_facet <- function(p, open = "", close = "", tag_pool = letters, x = -Inf, y = Inf,
hjust = "", vjust = "", fontface = 2, family = "", ...) {
# p<-para_sites
# x=paras_PFTs_new$x
# y=paras_PFTs_new$parameter_value
# open=""
# close=""
# tag_pool=paras_PFTs_new$label
gb <- ggplot_build(p)
lay <- gb$layout$layout
tags <- cbind(lay, label = paste0(open, tag_pool[lay$PANEL], close), x = x, y = y)
p + geom_text(data = tags, aes_string(x = "x", y = "y", label = "label"), ..., hjust = hjust,
vjust = vjust, fontface = fontface, family = family, inherit.aes = FALSE)
}
library(egg)
##add the PFTs parameters onto each panel:
paras_PFTs_new<-data_sel_final[data_sel_final$flag=="PFT",-1]
paras_PFTs_new$x<-rep(NA,nrow(paras_PFTs_new))
paras_PFTs_new[paras_PFTs_new$PFT=="MF",]$x<-1
paras_PFTs_new[paras_PFTs_new$PFT=="DBF",]$x<-0.75
paras_PFTs_new[paras_PFTs_new$PFT=="ENF",]$x<-1.25
##
paras_PFTs_new$label<-rep("*",nrow(paras_PFTs_new))
##
paras_PFTs_new$label<-rep("*",nrow(paras_PFTs_new))
paras_PFTs_new$col<-c(rep("goldenrod",3),rep("cyan2",3),rep("magenta3",3))
#
# paras_PFTs_new$PFT<-factor(paras_PFTs_new$PFT,levels = c("DBF","MF","ENF"))
# paras_PFTs_new$parameter<-factor(paras_PFTs_new$parameter,levels = c("tau","X0","Smax"))
paras_boxplot<-tag_facet(para_sites,x=paras_PFTs_new$x,y=paras_PFTs_new$parameter_value,
#here I add 1 for y axis since there parameters for PFTs did not display properly
tag_pool = paras_PFTs_new$label,size=12,col=paras_PFTs_new$col)
paras_boxplot
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure6_parameters_boxplot.png"),paras_boxplot)
###plot part 2:
#----------------scatter plot------------------
#environmental drivers vs parameters
library(ggforce)
library(ggrepel)
df_meteo<-df_final_new
df_paras<-data_sel_final
Env_var<-"tmean"
para<-"tau"
do_legend=FALSE
# for example: Tmean vs tau
#I.site-level
df_site_level<-df_meteo %>%
select(sitename,classid,koeppen_code,Clim.PFTs,para,tmin,temp)
names(df_site_level)<-c("sitename","PFT","Clim.","Clim.PFTs","para","tmin","tmean")
#
t_pos<-match(Env_var,names(df_site_level))
df_site_level_new<-df_site_level
names(df_site_level_new)[t_pos]<-"Env_var"
#III.PFT level---
df_PFT_level<-df_site_level %>%
group_by(PFT)%>%
summarise(tmin=mean(tmin,na.rm=T),
tmean=mean(tmean,na.rm=T))
par_PFT_level<-df_paras[df_paras$flag=="PFT",] %>%
mutate(sitename=NULL,Clim_PFTs=NULL,flag=NULL)%>%
filter(parameter==para)
par_PFT_level<-par_PFT_level[,-1]
names(par_PFT_level)<-c("para","PFT")
#
df_PFT_level_new<-left_join(df_PFT_level,par_PFT_level)
#
t_pos<-match(Env_var,names(df_PFT_level_new))
names(df_PFT_level_new)[t_pos]<-"Env_var"
##----plotting----##
pars_final<-ggplot()+
geom_point(data=df_site_level_new,aes(x=Env_var,y=para,col=PFT),size=3)+
# scale_color_discrete_sequential(palette = "Viridis")+
geom_text_repel(data=df_site_level_new,aes(x=Env_var,y=para,label=sitename))+
geom_smooth(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,col=PFT),
fill=adjustcolor("goldenrod1",0.05),method = "lm",formula = y ~ x,lty=2)+
ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,label=PFT,group=PFT,col=PFT),label.fill = "goldenrod1",
con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "goldenrod1",
con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##DBF
geom_smooth(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
aes(x=Env_var,y=para,col=PFT),fill=adjustcolor("magenta1",0.05),
method = "lm",formula = y ~ x,lty=2)+
ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$Clim.PFTs=="Dfc-ENF",],
aes(x=Env_var,y=para,label=Clim.PFTs,group=Clim.PFTs,col=PFT),label.fill = "magenta1",
con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "magenta1",
con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##Dfc-ENF
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
xlab(paste0(Env_var," (°C)"))+
ylab(paste0(para," (°C)"))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
pars_final
plot_paras<-function(df_meteo,df_paras,Env_var,para,do_legend){
# df_meteo<-df_final_new
# df_paras<-data_sel_final
# Env_var<-"tmean"
# para<-"tau"
# do_legend=FALSE
# for example: Tmean vs tau
#I.site-level
df_site_level<-df_meteo %>%
select(sitename,classid,koeppen_code,Clim.PFTs,para,tmin,temp)
names(df_site_level)<-c("sitename","PFT","Clim.","Clim.PFTs","para","tmin","tmean")
#
t_pos<-match(Env_var,names(df_site_level))
df_site_level_new<-df_site_level
names(df_site_level_new)[t_pos]<-"Env_var"
#III.PFT level---
df_PFT_level<-df_site_level %>%
group_by(PFT)%>%
summarise(tmin=mean(tmin,na.rm=T),
tmean=mean(tmean,na.rm=T))
par_PFT_level<-df_paras[df_paras$flag=="PFT",] %>%
mutate(sitename=NULL,Clim_PFTs=NULL,flag=NULL)%>%
filter(parameter==para)
par_PFT_level<-par_PFT_level[,-1]
names(par_PFT_level)<-c("para","PFT")
#
df_PFT_level_new<-left_join(df_PFT_level,par_PFT_level)
#
t_pos<-match(Env_var,names(df_PFT_level_new))
names(df_PFT_level_new)[t_pos]<-"Env_var"
##----plotting----##
pars_final<-ggplot()+
geom_point(data=df_site_level_new,aes(x=Env_var,y=para,col=PFT),size=3)+
# scale_color_discrete_sequential(palette = "Viridis")+
geom_text_repel(data=df_site_level_new,aes(x=Env_var,y=para,label=sitename))+
geom_smooth(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,col=PFT),
fill=adjustcolor("goldenrod1",0.05),method = "lm",formula = y ~ x,lty=2)+
ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$PFT=='DBF',],
aes(x=Env_var,y=para,label=PFT,group=PFT,col=PFT),label.fill = "goldenrod1",
con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "goldenrod1",
con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##DBF
geom_smooth(data=df_site_level_new[df_site_level_new$Clim.PFTs=='Dfc-ENF',],
aes(x=Env_var,y=para,col=PFT),fill=adjustcolor("magenta1",0.05),
method = "lm",formula = y ~ x,lty=2)+
ggforce::geom_mark_ellipse(data=df_site_level_new[df_site_level_new$Clim.PFTs=="Dfc-ENF",],
aes(x=Env_var,y=para,label=Clim.PFTs,group=Clim.PFTs,col=PFT),label.fill = "magenta1",
con.border = "one",con.cap = 0,con.size = 1.1,con.colour = "magenta1",
con.arrow = grid::arrow(angle=30,ends = "last",length = unit(0.1,"inches")))+  ##Dfc-ENF
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
xlab(paste0(Env_var," (°C)"))+
ylab(paste0(para," (°C)"))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
if(do_legend==FALSE){
pars_final<-pars_final+
theme(legend.position = "none")
}
#
return(pars_final)
}
p_tmean_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "tau",FALSE)
p_tmean_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "Smax",FALSE)
p_tmean_X0
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "Smax",FALSE)
p_tmin_Smax
p_tmean_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "tau",FALSE)
p_tmean_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "X0",FALSE)
p_tmean_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "Smax",FALSE)
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean+X0+xlab(expression("T"[mean]*" (°C)"))
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean+X0+xlab(expression("T"[mean]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+xlab(expression("T"[min]*" (°C)"))
p_tmean_tau
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean_X0+X0+xlab(expression("T"[mean]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+xlab(expression("T"[min]*" (°C)"))
p_tmean_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "tau",FALSE)
p_tmean_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "X0",FALSE)
p_tmean_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmean",
para = "Smax",FALSE)
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean_X0+X0+xlab(expression("T"[mean]*" (°C)"))
p_tmean_X0<-p_tmean_X0+xlab(expression("T"[mean]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+xlab(expression("T"[min]*" (°C)"))
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean_X0+xlab(expression("T"[mean]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+xlab(expression("T"[min]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
nrow = 3,ncol=2,labels = "auto",label_size = 20,align = "hv")
paras_range
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
nrow = 3,labels = "auto",label_size = 20,align = "hv")
paras_range
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
ncol = 3,labels = "auto",label_size = 20,align = "hv")
paras_range
plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_tau<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "tau",FALSE)
p_tmin_X0<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "X0",FALSE)
p_tmin_Smax<-plot_paras(df_meteo = df_final_new,df_paras = data_sel_final,Env_var = "tmin",
para = "Smax",FALSE)
#change the x labels:
p_tmean_tau<-p_tmean_tau+xlab(expression("T"[min]*" (°C)"))
p_tmean_X0<-p_tmean_X0+xlab(expression("T"[min]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+xlab(expression("T"[min]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
ncol = 3,labels = "auto",label_size = 20,align = "hv")
paras_range
p_tmean_tau+xlab(expression(tau*"T"[min]*" (°C)"))
p_tmean_tau+xlab(expression(tau*"T"[min]*" (°C)"))
p_tmean_tau+xlab(expression( tau *"T"[min]*" (°C)"))
p_tmean_tau+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*" (day)"))
p_tmean_X0
p_tmean_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))
p_tmean_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#change the x labels:
p_tmean_tau<-p_tmean_tau+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(tau*""))
p_tmean_X0<-p_tmean_X0+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(X[0]*" (°C)"))
p_tmean_Smax<-p_tmean_Smax+
xlab(expression("T"[min]*" (°C)"))+ylab(expression(S[max]*" (°C)"))
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
ncol = 3,labels = "auto",label_size = 20,align = "hv")
paras_range
#merge the plots:
paras_range<-cowplot::plot_grid(p_tmean_tau,p_tmean_X0,p_tmean_Smax,
ncol = 3,labels = "auto",label_size = 20,align = "hv")
######save the plot###########
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure7_parameters_ranges.png"),paras_range,height = 12,width = 20)
#############################additional code ###########################
#----
#check the paraters difference among different groups
#----
library(ggpubr)
ggsave(paste0(save.path,"Figure7_parameters_ranges.png"),paras_range,height = 8,width = 20)
