label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("spring  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
####
plot_fT_winter<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression(T[min]*" (°C)"))+
ylab(expression(f[T]))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###Additonal plot:Tmin_winter vs fT_spring:
plot_data_winter<-plot_data%>%
filter(season=="winter")%>%
select(sitename,temp,prec,tmin_mean,tmin_min) #select its temperature
plot_data_spring<-plot_data%>%
filter(season=="spring")%>%
select(sitename,fT,Clim.PFTs,PFT)
plot_data_new_test<-left_join(plot_data_winter,plot_data_spring)
plot_fT_winterT_springfT<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_test.png"),plot_fT,height = 8,width = 9)
ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
ggplot()+
geom_point(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data[plot_data$season=="spring",],
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("spring  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
# legend.position = "none",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
####
plot_fT_spring<-ggplot()+
geom_point(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data[plot_data$season=="spring",],
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("spring  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
####
plot_fT_winter<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression(T[min]*" (°C)"))+
ylab(expression(f[T]))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###Additonal plot:Tmin_winter vs fT_spring:
plot_data_winter<-plot_data%>%
filter(season=="winter")%>%
select(sitename,temp,prec,tmin_mean,tmin_min) #select its temperature
plot_data_spring<-plot_data%>%
filter(season=="spring")%>%
select(sitename,fT,Clim.PFTs,PFT)
plot_data_new_test<-left_join(plot_data_winter,plot_data_spring)
plot_fT_winterT_springfT<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_test.png"),plot_fT,height = 8,width = 12)
ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT),size=3)+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT),size=4)+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
#-------
#B.for different season:
#------
plot_data<-df_sum_season_new %>%
dplyr::select(sitename,season,temp,prec,tmin_mean,tmin_min,fT,classid,Clim.PFTs,tau:k)%>%
mutate(PFT=classid,classid=NULL)
####
plot_fT_spring<-ggplot()+
geom_point(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT),size=4)+
geom_text_repel(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data[plot_data$season=="spring",],
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("spring  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
####
plot_fT_winter<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression(T[min]*" (°C)"))+
ylab(expression(f[T]))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###Additonal plot:Tmin_winter vs fT_spring:
plot_data_winter<-plot_data%>%
filter(season=="winter")%>%
select(sitename,temp,prec,tmin_mean,tmin_min) #select its temperature
plot_data_spring<-plot_data%>%
filter(season=="spring")%>%
select(sitename,fT,Clim.PFTs,PFT)
plot_data_new_test<-left_join(plot_data_winter,plot_data_spring)
plot_fT_winterT_springfT<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT),size=4)+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
# geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta.png"),plot_fT,height = 8,width = 9)
####
plot_fT_spring<-ggplot()+
geom_point(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT),size=4)+
geom_text_repel(data = plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data[plot_data$season=="spring",],aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data[plot_data$season=="spring",],
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("spring  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "none",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
####
plot_fT_winter<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,size=prec))+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression(T[min]*" (°C)"))+
ylab(expression(f[T]))+
theme(
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
###Additonal plot:Tmin_winter vs fT_spring:
plot_data_winter<-plot_data%>%
filter(season=="winter")%>%
select(sitename,temp,prec,tmin_mean,tmin_min) #select its temperature
plot_data_spring<-plot_data%>%
filter(season=="spring")%>%
select(sitename,fT,Clim.PFTs,PFT)
plot_data_new_test<-left_join(plot_data_winter,plot_data_spring)
plot_fT_winterT_springfT<-ggplot()+
geom_point(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT),size=4)+
geom_text_repel(data = plot_data_new_test,aes(x=tmin_min,y=fT,col=PFT,label=sitename),size=4)+
scale_color_manual(values = c("DBF"="orange","MF"="cyan","ENF"="magenta"))+
geom_smooth(data=plot_data_new_test,aes(x=tmin_min,y=fT),col="blue",
method = "lm",formula = y ~ x,lty=2,fill=adjustcolor("steelblue2",0.2))+
stat_poly_eq(data=plot_data_new_test,
aes(x=tmin_min,y=fT,
label = paste(
after_stat(rr.label),
after_stat(p.value.label),
sep = "*\", \"*"),
),col="blue")+
xlab(expression("winter  "*T[min]*" (°C)"))+
ylab(expression("spring  "*f[T]))+
geom_hline(yintercept = 1,lty=2)+
theme(
legend.position = "bottom",
legend.text = element_text(size=22),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=26),
axis.text = element_text(size = 22),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white")
)
##merge the plots:
library(cowplot)
plot_fT<-plot_grid(plot_fT_spring,plot_fT_winterT_springfT,nrow = 2,align = 'hv')
#save the plot
save.path<-"./manuscript/figures/"
ggsave(paste0(save.path,"Figure8_fT_vs_Ta_test.png"),plot_fT,height = 8,width = 9)
