# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels, labels = b) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels, labels = a) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
gg
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here
scale_x_discrete(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels, labels = b)
?scale_x_continuous
lon.labels
lon.labels
lon.labels[2:6]
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b)
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6])
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6]) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels, labels = a)
c(latmin, latmax)
lat.labels
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6]) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels[2], labels = a[2]) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
##---------------------------------------------
## Create ggplot object
##---------------------------------------------
#update in October, 2022 by Yunpeng
lat.labels <- seq(30, 90, 30)
lat.short  <- seq(30, 90, 10)
lon.labels <- seq(-180, 180, 60)
lon.short  <- seq(-180, 180, 10)
# a<-expression("30°" ~ N,"40°" ~ N,"50°" ~ N,
#               "60°" ~ N,"70°" ~ N,"80°" ~ N,"90°" ~ N)
a<-expression("30°" ~ N,"60°" ~ N,"90°" ~ N)
b<-expression("180°"  ~ W, "120°" ~ W, "60°" ~ W,"0°",
"60°" ~ E, "120°" ~ E, "180°" ~ E)
gg <- ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6]) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels[2], labels = a[2]) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
gg
##---------------------------------------
#Aim: To add barplots/different colors on the map to indicate different springtime bias
#in different site years
##---------------------------------------
library(ggplot2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(dplyr)
library(tidyr)
library(tmap)
library(mapdata)
library(rworldmap)
library(rworldxtra)
library(colorRamps)
library(graphics)
library(jpeg)
#I.load the map
data(coastsCoarse)
#prepration for map
# newmap <- getMap(resolution = "high")[getMap()$ADMIN!='Antarctica',]
newmap <- getMap(resolution = "high")
#(1)load the EC sites used from Fluxnet 2015
library("readxl")
sites.path<-"./data-raw/raw_data/sites_info/"
load(paste0(sites.path,"Pre_selected_sites_info.RDA"))
ori_coord_sites<-df_sites_sel
#at the end, seveals sites do not used for analysis because of the data availabilty
#-->no complete spring
#load the final sites name
load.path<-"./data/event_length/"
load(paste0(load.path,"df_events_length.RDA"))
final.sites<-unique(df_events_all$sitename)
match.pos<-match(final.sites,ori_coord_sites$sitename)
final_coord_sites<-ori_coord_sites[match.pos,]
#(2)add the flag and set the factors
ori_coord_sites$flag<-rep("Ori-sites",nrow(ori_coord_sites))
final_coord_sites$flag<-rep("Final_sites",nrow(final_coord_sites))
####set the factors
#for sites from ori sites
ori_coord_sites$koeppen_code<-factor(ori_coord_sites$koeppen_code,levels = c("Cfa","Cfb","Dfb","Dfc"))
ori_coord_sites$PFT<-factor(ori_coord_sites$classid,levels = c("DBF","MF","ENF"))
# #for final sites
final_coord_sites$koeppen_code<-factor(final_coord_sites$koeppen_code,levels = c("Cfa","Cfb","Dfb","Dfc"))
final_coord_sites$PFT<-factor(final_coord_sites$classid,levels = c("DBF","MF","ENF"))
#(3)also adding the information of how many percentage of year with spring bias%
event.data.path<-"./data/event_length/"
load(file=paste0(event.data.path,"df_events_length.RDA"))
#first add a flag to indicate if the sites have overestimation or not;
df_events_all<-df_events_all %>%
mutate(event_flag=rep(NA,nrow(df_events_all)),
event_flag=ifelse(Over_days_length<20|is.na(Over_days_length),"no","yes"))
t1<-df_events_all %>%
group_by(sitename)%>%
dplyr::summarise(nyear=length(unique(Year)))
t2<-df_events_all%>%
filter(event_flag=="yes")%>%
group_by(sitename)%>%
dplyr::summarise(nyear_event=length(unique(Year)),
event_day_mean=mean(Over_days_length),
event_day_mean=round(event_day_mean,2))
t_merge<-left_join(t1,t2)
event_merge<-t_merge%>%
mutate(event_day_mean=ifelse(is.na(event_day_mean),0,event_day_mean))%>%
mutate(event_perc=nyear_event/nyear)%>%
mutate(event_perc=ifelse(is.na(event_perc),0,event_perc),
event_perc=round(event_perc,2))
#merge the datasets
final_coord_sites<-left_join(final_coord_sites,event_merge)
#(4)load the GPP data(has been characterized as
#"overestimated" or "non-overestimated")
load.path<-"./data/data_used/"
#from new method:
load(paste0(load.path,"ddf_labeled_norm_trs_newmethod_all_overestimation_Fluxnet2015_sites.RDA"))
df_all_sites<-ddf_labeled;rm(ddf_labeled)
#select the needed variables
df_GPP<-df_all_sites%>%
select(sitename,date,doy,greenup,gpp_obs,gpp_mod_FULL,gpp_res)%>%
filter(greenup=="yes")%>% ##selecting the green-up period data
group_by(sitename)%>%
dplyr::summarise(gpp_obs_GP=mean(gpp_obs,na.rm=T),
gpp_mod_GP=mean(gpp_mod_FULL,na.rm=T),
gpp_bias=mean(c(gpp_mod_GP - gpp_obs_GP),na.rm=T)
)   #GP:for green-up period
##merge the data:
final_coord_sites<-left_join(final_coord_sites,df_GPP)
#---------------------------------------------
#II.plotting
#---------------------------------------------
library(RColorBrewer)
library(grDevices)
############
# map theme
############
#can refer:http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
theme_map <-
# theme_dark() +    # theme_minimal()
theme(
#add by YP:
# panel.background = element_rect(fill = "gray60",
#                                 colour = "gray60",
#                                 size = 0.5, linetype = "solid"),
# #add by YP:
# plot.background = element_rect(fill="gray60"),
#
plot.title = element_text(hjust = 0, face="bold", size = 18),
# legend.position = "right", # c(0.07, 0.35), #"left"
# legend.key.size = unit(c(5, 1), "mm"),
legend.title=element_text(size=12),
legend.text=element_text(size=10),
# axis.line = element_blank(),
# axis.text = element_blank(),
# axis.title = element_blank(),
# panel.grid.major = element_line(colour="black",size = 0.5,linetype = "solid"),
panel.grid.minor = element_blank(),
# plot.margin = unit( c(0, 0, 0, 5) , "mm")
)
# define labels
lat.labels <- seq(30, 90, 30)
lat.short  <- seq(30, 90, 10)
lon.labels <- seq(-180, 180, 60)
lon.short  <- seq(-180, 180, 10)
a <- sapply( lat.labels, function(x) if (x>0) {parse(text = paste0(x, "*degree ~ N"))} else if (x==0) {parse(text = paste0(x, "*degree"))} else {parse(text = paste0(-x, "*degree ~ S"))} )
b <- sapply( lon.labels, function(x) if (x>0) {parse(text = paste0(x, "*degree ~ E"))} else if (x==0) {parse(text = paste0(x, "*degree"))} else {parse(text = paste0(-x, "*degree ~ W"))} )
#update in March, 2022
a<-expression("30°" ~ N, "60°" ~ N, "90°" ~ N)
b<-expression("30°"  ~ W, "120°" ~ W, "60°" ~ W,"0°",
"60°" ~ E, "120°" ~ E, "180°" ~ E)
#---------------------------------------------
# 1. Create ggplot object
#---------------------------------------------
lonmin=-180
lonmax=180
latmin=30
latmax=90
#group=group-->results in the wrong map background:ask Beni's advices
#something need to be paid attention-->to make sure the plot looks right
#-->should set latmin=-90; latmax=90
#-->and also leave some place for latitude and longtitude-->set the limits in scale_x/y_continous adding or minus some numbers
gg <- ggplot() +
theme_map+
# background countries
# geom_polygon(data=newmap, aes(long, lat, group=group), color=NA, fill='grey75') +
# Coastline
geom_path(data=coastsCoarse, aes(long, lat, group=group), color='black',size=1.02) +
#
scale_x_continuous(expand = c(0,0), limits = c(-1+lonmin,lonmax+1), breaks = lon.labels, labels = b) +
scale_y_continuous(expand = c(0,0), limits = c(-1+latmin,latmax+1), breaks = lat.labels, labels = a) +
labs( x = "longtitude", y = "latitude")
rm(gg)
library(rworldmap)
library(ggplot2)
library(rnaturalearth)
library(sf)
# download global coastline data from naturalearth
countries <- rnaturalearth::ne_countries(scale = 110, returnclass = "sf")
##---------------------------------------------
## Projection
##---------------------------------------------
# set coordinate systems
robinson <- CRS("+proj=robin +over")
# create a bounding box for the robinson projection
bb <- sf::st_union(sf::st_make_grid(
st_bbox(c(xmin = -180,
xmax = 180,
ymax = 30,
ymin = -90),
crs = st_crs(4326)),
n = c(12,6)))
bb_robinson <- st_transform(bb, as.character(robinson))
# clip countries to bounding box
# and transform
# countries <- countries %>%
#   st_buffer(0) %>%
#   st_intersection(st_union(bb)) %>%
#   st_transform(robinson)
## map theme
##---------------------------------------------
theme_map <- theme_grey() +    # theme_minimal()
theme(
plot.title = element_text(hjust = 0, face="bold", size = 18),
legend.position = "right", # c(0.07, 0.35), #"left"
# legend.key.size = unit(c(5, 1), "mm"),
legend.title=element_text(size=12),
legend.text=element_text(size=10),
# axis.line = element_blank(),
# axis.text = element_blank(),
# axis.title = element_blank(),
# panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
# plot.margin = unit( c(0, 0, 0, 5) , "mm")
)
##---------------------------------------------
## Create ggplot object
##---------------------------------------------
#update in October, 2022 by Yunpeng
lat.labels <- seq(30, 90, 30)
lat.short  <- seq(30, 90, 10)
lon.labels <- seq(-180, 180, 60)
lon.short  <- seq(-180, 180, 10)
# a<-expression("30°" ~ N,"40°" ~ N,"50°" ~ N,
#               "60°" ~ N,"70°" ~ N,"80°" ~ N,"90°" ~ N)
a<-expression("30°" ~ N,"60°" ~ N,"90°" ~ N)
b<-expression("180°"  ~ W, "120°" ~ W, "60°" ~ W,"0°",
"60°" ~ E, "120°" ~ E, "180°" ~ E)
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6]) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels[2], labels = a[2]) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
# theme(axis.ticks.y.right = element_line(),
#       axis.ticks.x.top = element_line(),
#       panel.grid = element_blank())
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1)
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b[2:6])
b[2:6])
b
# a<-expression("30°" ~ N,"40°" ~ N,"50°" ~ N,
#               "60°" ~ N,"70°" ~ N,"80°" ~ N,"90°" ~ N)
# a<-expression("30°" ~ N,"60°" ~ N,"90°" ~ N)
# b<-expression("180°"  ~ W, "120°" ~ W, "60°" ~ W,"0°",
#               "60°" ~ E, "120°" ~ E, "180°" ~ E)
a<-expression("60°" ~ N)
b<-expression("120°" ~ W, "60°" ~ W,"0°",
"60°" ~ E, "120°" ~ E)
##---------------------------------------------
## Create ggplot object
##---------------------------------------------
#update in October, 2022 by Yunpeng
lat.labels <- seq(30, 90, 30)
lat.short  <- seq(30, 90, 10)
lon.labels <- seq(-180, 180, 60)
lon.short  <- seq(-180, 180, 10)
# a<-expression("30°" ~ N,"40°" ~ N,"50°" ~ N,
#               "60°" ~ N,"70°" ~ N,"80°" ~ N,"90°" ~ N)
# a<-expression("30°" ~ N,"60°" ~ N,"90°" ~ N)
# b<-expression("180°"  ~ W, "120°" ~ W, "60°" ~ W,"0°",
#               "60°" ~ E, "120°" ~ E, "180°" ~ E)
a<-expression("60°" ~ N)
b<-expression("120°" ~ W, "60°" ~ W,"0°",
"60°" ~ E, "120°" ~ E)
gg <- ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels[2], labels = a) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
gg
lat.labels[2]
b
a
ggplot() +
# background countries
# geom_sf(data = countries, color="black", fill='grey75', size = 0.1) +
geom_sf(data = countries,
colour = 'black',
fill = 'grey75',  # NA for empty
linetype = 'solid',
size = 0.1) +
# bounding box
geom_sf(data = bb_robinson,
colour = 'black',
linetype = 'solid',
fill = NA,
size = 0.1) +
# coord_sf(
#   ylim = c(-60, 90)
# ) +
#working here!!
scale_x_continuous(expand = c(0, 0), limits = c(lonmin,lonmax),
breaks = lon.labels[2:6], labels = b) +
scale_y_continuous(expand = c(0, 0), limits = c(latmin, latmax),
breaks = lat.labels[2], labels = a) +
labs( x = "longtitude", y = "latitude")+
theme_bw()
