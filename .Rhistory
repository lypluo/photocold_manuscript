df<-df_final
vars<-"temp"
df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)
names(df_final_new)
df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date)) %>%
group_by(CLim_PFTs,doy)%>%
df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date)) %>%
group_by(CLim_PFTs,doy)
df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
df<-df_final
vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
head(df_plot)
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="gray",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="gray10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line()+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
#################
#preparing the comparison function:
comp_vars<-fucntion(df,vars){
# df<-df_final
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
}
#################
#preparing the comparison function:
comp_vars<-fucntion(df,vars){
# df<-df_final
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
print(season_plot)
}
#################
#preparing the comparison function:
comp_vars<-fucntion(df,vars){
# df<-df_final
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
print(season_plot)
}
#################
#preparing the comparison function:
comp_vars<-function(df,vars){
# df<-df_final
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
print(season_plot)
}
##
#1)Temp
plot_temp<-comp_vars(df_final,"temp")
names(df_final)
#################
#preparing the comparison function:
comp_vars<-function(df,vars){
# df<-df_final_new
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
print(season_plot)
}
##
#1)Temp
plot_temp<-comp_vars(df_final_new,"temp")
#2)tmin
plot_tmin<-comp_vars(df_final_new,"tmin")
names(df_final_new)
#2)tmin
plot_tmin<-comp_vars(df_final_new,"tmin")
#3)ppfd
plot_ppfd<-comp_vars(df_final_new,"ppfd")
#4)vpd
plot_vpd<-comp_vars(df_final_new,"vpd")
#################
#preparing the comparison function:
#multiplying the adjusted factor for ppfd:
df_final_new$ppfd<-df_final_new$ppfd*1000000
comp_vars<-function(df,vars){
# df<-df_final_new
# vars<-"temp"
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
print(season_plot)
}
##
#1)Temp
plot_temp<-comp_vars(df_final_new,"temp")
#2)tmin
plot_tmin<-comp_vars(df_final_new,"tmin")
#3)ppfd
plot_ppfd<-comp_vars(df_final_new,"ppfd")
#4)vpd
plot_vpd<-comp_vars(df_final_new,"vpd")
#3)ppfd
plot_ppfd<-comp_vars(df_final_new,"ppfd")
#4)vpd
plot_vpd<-comp_vars(df_final_new,"vpd")
comp_vars<-function(df,vars,do_legend){
# df<-df_final_new
# vars<-"temp"
# do_legend<-TRUE
#
df_plot<-df_final_new %>%
filter(Clim_PFTs=="Cfb-DBF"|Clim_PFTs=="Dfb-DBF")%>%
select(sitename,date,Clim_PFTs,vars)%>%
mutate(doy = lubridate::yday(date))
names(df_plot)<-c("sitename","date","Clim_PFTs","proc_var","doy")
#plotting
season_plot<-df_plot %>%
group_by(Clim_PFTs,doy)%>%
summarise(proc_var=mean(proc_var,na.rm=T)) %>%
ggplot(aes(doy,proc_var,color=Clim_PFTs))+
geom_line(size=1.1)+
scale_color_manual("Clim_PFTs",values = c("Cfb-DBF" = "grey10",
"Dfb-DBF" = "orange"),
labels = c("Cfb-DBF", "Dfb-DBF")) +
labs(y = vars ,
x = "DoY") +
theme(
legend.text = element_text(size=20),
legend.key.size = unit(2, 'lines'),
axis.title = element_text(size=24),
axis.text = element_text(size = 20),
text = element_text(size=24),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour ="grey10",fill="white"),
# legend.background = element_blank(),
legend.position = c(0.5,0.3)
)
if(do_legend==FALSE){
season_plot<-season_plot+
theme(legend.position = "none")
}
print(season_plot)
}
##
#1)Temp
plot_temp<-comp_vars(df_final_new,"temp",TRUE)
#2)tmin
plot_tmin<-comp_vars(df_final_new,"tmin",FALSE)
#2)tmin
plot_tmin<-comp_vars(df_final_new,"tmin",FALSE)
#3)ppfd
plot_ppfd<-comp_vars(df_final_new,"ppfd",FALSE)
#4)vpd
plot_vpd<-comp_vars(df_final_new,"vpd",FALSE)
plot_grid(plot_temp,plot_tmin,plot_ppdf,plot_vpd,nrow = 2)
plot_grid(plot_temp,plot_tmin,plot_ppfd,plot_vpd,nrow = 2)
comp_env_vars<-plot_grid(plot_temp,plot_tmin,plot_ppfd,plot_vpd,nrow = 2)
#save the plot
#merge the plots:
library(ggpubr)
comp_env_vars<-plot_grid(plot_temp,plot_tmin,plot_ppfd,plot_vpd,nrow = 2)
#save the plot
#merge the plots:
library(ggpubr)
comp_env_vars<-plot_grid(plot_temp,plot_tmin,plot_ppfd,plot_vpd,nrow = 2)
save.path<-"./manuscript/test_files/compare_vars_in_diff_Clim_PFTs/"
ggsave(paste0(save.path,"Figure5_pmodel_vs_obs_for_Clim-PFTs_parameter_check_Cfb-DBF.png"),
comp_env_vars,width = 15,height = 10)
ggsave(paste0(save.path,"Check_vars_DBF.png"),
comp_env_vars,width = 15,height = 10)
